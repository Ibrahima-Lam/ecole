<?php

// autoload_static.php @generated by Composer

namespace Composer\Autoload;

class ComposerStaticInit5ce13f389270716aa74fac6c4293dda4
{
    public static $files = array (
        '6124b4c8570aa390c21fafd04a26c69f' => __DIR__ . '/..' . '/myclabs/deep-copy/src/DeepCopy/deep_copy.php',
        'db356362850385d08a5381de2638b5fd' => __DIR__ . '/..' . '/mpdf/mpdf/src/functions.php',
    );

    public static $prefixLengthsPsr4 = array (
        's' => 
        array (
            'setasign\\Fpdi\\' => 14,
        ),
        'h' => 
        array (
            'https\\' => 6,
            'http\\' => 5,
        ),
        'Z' => 
        array (
            'ZipStream\\' => 10,
        ),
        'S' => 
        array (
            'Src\\' => 4,
            'Services\\' => 9,
        ),
        'R' => 
        array (
            'Repository\\' => 11,
            'Repositories\\' => 13,
        ),
        'P' => 
        array (
            'Psr\\SimpleCache\\' => 16,
            'Psr\\Log\\' => 8,
            'Psr\\Http\\Message\\' => 17,
            'Psr\\Http\\Client\\' => 16,
            'Providers\\' => 10,
            'PhpOffice\\PhpSpreadsheet\\' => 25,
            'Pdfs\\' => 5,
            'Pdf\\' => 4,
            'Paramettres\\' => 12,
            'Paramettre\\' => 11,
        ),
        'M' => 
        array (
            'Mpdf\\PsrLogAwareTrait\\' => 22,
            'Mpdf\\PsrHttpMessageShim\\' => 24,
            'Mpdf\\' => 5,
            'Models\\' => 7,
            'Matrix\\' => 7,
        ),
        'E' => 
        array (
            'Entity\\' => 7,
            'Entities\\' => 9,
        ),
        'D' => 
        array (
            'DeepCopy\\' => 9,
        ),
        'C' => 
        array (
            'Core\\' => 5,
            'Controllers\\' => 12,
            'Complex\\' => 8,
        ),
        'A' => 
        array (
            'App\\' => 4,
            'Apis\\' => 5,
            'Api\\' => 4,
        ),
    );

    public static $prefixDirsPsr4 = array (
        'setasign\\Fpdi\\' => 
        array (
            0 => __DIR__ . '/..' . '/setasign/fpdi/src',
        ),
        'https\\' => 
        array (
            0 => __DIR__ . '/../..' . '/https',
        ),
        'http\\' => 
        array (
            0 => __DIR__ . '/../..' . '/http',
        ),
        'ZipStream\\' => 
        array (
            0 => __DIR__ . '/..' . '/maennchen/zipstream-php/src',
        ),
        'Src\\' => 
        array (
            0 => __DIR__ . '/../..' . '/Src',
        ),
        'Services\\' => 
        array (
            0 => __DIR__ . '/../..' . '/Services',
        ),
        'Repository\\' => 
        array (
            0 => __DIR__ . '/../..' . '/Repository',
        ),
        'Repositories\\' => 
        array (
            0 => __DIR__ . '/../..' . '/Repositories',
        ),
        'Psr\\SimpleCache\\' => 
        array (
            0 => __DIR__ . '/..' . '/psr/simple-cache/src',
        ),
        'Psr\\Log\\' => 
        array (
            0 => __DIR__ . '/..' . '/psr/log/src',
        ),
        'Psr\\Http\\Message\\' => 
        array (
            0 => __DIR__ . '/..' . '/psr/http-factory/src',
            1 => __DIR__ . '/..' . '/psr/http-message/src',
        ),
        'Psr\\Http\\Client\\' => 
        array (
            0 => __DIR__ . '/..' . '/psr/http-client/src',
        ),
        'Providers\\' => 
        array (
            0 => __DIR__ . '/../..' . '/Providers',
        ),
        'PhpOffice\\PhpSpreadsheet\\' => 
        array (
            0 => __DIR__ . '/..' . '/phpoffice/phpspreadsheet/src/PhpSpreadsheet',
        ),
        'Pdfs\\' => 
        array (
            0 => __DIR__ . '/../..' . '/Pdfs',
        ),
        'Pdf\\' => 
        array (
            0 => __DIR__ . '/../..' . '/Pdf',
        ),
        'Paramettres\\' => 
        array (
            0 => __DIR__ . '/../..' . '/Paramettres',
        ),
        'Paramettre\\' => 
        array (
            0 => __DIR__ . '/../..' . '/Paramettre',
        ),
        'Mpdf\\PsrLogAwareTrait\\' => 
        array (
            0 => __DIR__ . '/..' . '/mpdf/psr-log-aware-trait/src',
        ),
        'Mpdf\\PsrHttpMessageShim\\' => 
        array (
            0 => __DIR__ . '/..' . '/mpdf/psr-http-message-shim/src',
        ),
        'Mpdf\\' => 
        array (
            0 => __DIR__ . '/..' . '/mpdf/mpdf/src',
        ),
        'Models\\' => 
        array (
            0 => __DIR__ . '/../..' . '/Models',
        ),
        'Matrix\\' => 
        array (
            0 => __DIR__ . '/..' . '/markbaker/matrix/classes/src',
        ),
        'Entity\\' => 
        array (
            0 => __DIR__ . '/../..' . '/Entity',
        ),
        'Entities\\' => 
        array (
            0 => __DIR__ . '/../..' . '/Entities',
        ),
        'DeepCopy\\' => 
        array (
            0 => __DIR__ . '/..' . '/myclabs/deep-copy/src/DeepCopy',
        ),
        'Core\\' => 
        array (
            0 => __DIR__ . '/../..' . '/Core',
        ),
        'Controllers\\' => 
        array (
            0 => __DIR__ . '/../..' . '/Controllers',
        ),
        'Complex\\' => 
        array (
            0 => __DIR__ . '/..' . '/markbaker/complex/classes/src',
        ),
        'App\\' => 
        array (
            0 => __DIR__ . '/../..' . '/App',
        ),
        'Apis\\' => 
        array (
            0 => __DIR__ . '/../..' . '/Apis',
        ),
        'Api\\' => 
        array (
            0 => __DIR__ . '/../..' . '/Api',
        ),
    );

    public static $classMap = array (
        'Composer\\InstalledVersions' => __DIR__ . '/..' . '/composer/InstalledVersions.php',
    );

    public static function getInitializer(ClassLoader $loader)
    {
        return \Closure::bind(function () use ($loader) {
            $loader->prefixLengthsPsr4 = ComposerStaticInit5ce13f389270716aa74fac6c4293dda4::$prefixLengthsPsr4;
            $loader->prefixDirsPsr4 = ComposerStaticInit5ce13f389270716aa74fac6c4293dda4::$prefixDirsPsr4;
            $loader->classMap = ComposerStaticInit5ce13f389270716aa74fac6c4293dda4::$classMap;

        }, null, ClassLoader::class);
    }
}
